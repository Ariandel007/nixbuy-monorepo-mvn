openapi: 3.0.1
info:
  title: "Product API"
  description: "API for managing products, including creation and editing"
  version: "1.0.0"

paths:
  /api/command-product-endpoint/v1/create-product:
    post:
      summary: "Create a new product"
      description: "Creates a new product with the given details."
      operationId: createProductV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreateCommand"
      responses:
        "200":
          description: "Product created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseForBodyProductDto"
        "400":
          description: "Validation errors occurred."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseForBodyError"


  /api/command-product-endpoint/v1/update-main-photo:
    patch:
      summary: "Update the main photo of a product."
      description: "Updates the main product image along with other details."
      operationId: updateMainPhoto
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                productName:
                  type: string
                productDescription:
                  type: string
                urlImage:
                  type: string
                price:
                  type: string
                mainPhotoOfProductFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Product updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseForBodyForProductToEditDto"
        "400":
          description: "Validation errors occurred."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseForBodyError"

components:
  schemas:
    ProductDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
    ProductCreateCommand:
      type: object
      required:
        - name
        - description
        - price
      properties:
        name:
          type: string
          description: "Name of the product"
          minLength: 1  # Equivalent to @NotBlank
          example: "Sample Product"
        description:
          type: string
          description: "Product description"
          minLength: 1  # Equivalent to @NotBlank
          example: "This is a product description."
        price:
          type: number
          format: float
          description: "Product price"
          minimum: 0  # Equivalent to @Min(value = 0)
          example: 10.5

    ProductToEditDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier of the product"
          example: 1
        name:
          type: string
          description: "Name of the product"
          example: "Sample Product"
        description:
          type: string
          description: "Description of the product"
          example: "This is a sample product description."
        urlImage:
          type: string
          format: uri
          description: "URL of the product image"
          example: "https://example.com/product-image.jpg"
        price:
          type: number
          format: float
          description: "Price of the product"
          example: 19.99

    GenericResponseForBodyError:
      type: object
      properties:
        code:
          type: array
          items:
            type: string
            example: "EXAMPLE_OF_ERROR"
        data:
          type: object
          example: null

    GenericResponseForBodyProductDto:
      type: object
      properties:
        code:
          type: array
          items:
            type: string
            example: "SUCCESSFUL"
        data:
          $ref: "#/components/schemas/ProductDto"

    GenericResponseForBodyForProductToEditDto:
      type: object
      properties:
        code:
          type: array
          items:
            type: string
            example: "SUCCESSFUL"
        data:
          $ref: "#/components/schemas/ProductToEditDto"
