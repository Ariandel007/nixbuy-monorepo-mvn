server:
  port: 3803
spring:
  application:
    name: products-service-nixbuy
  datasource:
    initialization-mode: always
    username: postgres
    url: jdbc:postgresql://localhost:5432/nixbuy_products
    platform: postgres
    password: admin
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'true'
        format_sql: true
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: localhost:9092
    group-id: consume-payment-outbox-1
    properties:
      security.protocol: PLAINTEXT  # Protocolo de seguridad (puede variar según tu configuración)
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # Serializador de clave (puede variar)
      value-serializer: org.apache.kafka.common.serialization.StringSerializer  # Serializador de valor (puede variar)

#  profiles:
#    active: development
#  cloud:
#    config:
#      uri: http://localhost:8888
logging:
  pattern:
  #    level: %{5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]}
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:3800/eureka

management:
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost}:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  metrics:
    tags:
      application: ${spring.application.name}

